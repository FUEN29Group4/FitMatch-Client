@{
    ViewBag.IsSubLayout = true;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="https://unpkg.com/vue@3"></script>
<script src="https://unpkg.com/vuex@4"></script>

<!-- personal 樣式 -->
<link rel="stylesheet" href="~/css/memberclass.css">
<!-- Page Header Start -->
<div class="container-fluid page-header py-5 mb-5 wow fadeIn"
     data-wow-delay="0.1s">
    <div class="container text-center py-5">
        <h1 class="display-3 text-white text-uppercase mb-3 animated slideInDown">
            Personal
        </h1>
        <nav aria-label="breadcrumb animated slideInDown">
            <ol class="breadcrumb justify-content-center text-uppercase mb-0">
                <li class="breadcrumb-item">
                    <a class="text-white" href="#">Home</a>
                </li>
                <li class="breadcrumb-item">
                    <a class="text-white" href="#">Member</a>
                </li>
                <li class="breadcrumb-item text-primary active" aria-current="page">
                    Personal
                </li>
            </ol>
        </nav>
    </div>
</div>
<!-- Page Header End -->
<!-- body start -->

<div class="container bg-white">
    <div class="container">
        <nav class="navbar navbar-expand-lg bg-body-tertiary">
            <div class="container-fluid">
                <div class="container member line">
                    <div class="nav" style="color: rgb(0, 0, 0);">
                        <a style="color: rgb(0, 0, 0);" asp-area="" asp-controller="Member" asp-action="Member"
                           class="nav-link nav-item ">基本資料</a>
                        <a style="color: rgb(0, 0, 0);" href="personal_member_Order_Traking.html"
                           class="nav-link nav-item">訂單查詢</a>
                        <a style="color: rgb(0, 0, 0);" asp-area="" asp-controller="MemberFavorite" asp-action="MemberFavorite"
                           class="nav-link nav-item">收藏清單</a>
                        <a style="color: rgb(0, 0, 0);" asp-area="" asp-controller="Member" asp-action="MemberClass"
                           class="nav-link nav-item">我的課表</a>
                        <a style="color: rgb(0, 0, 0);" href="personal_member_Customer_Service_Records.html"
                           class="nav-link nav-item">客服紀錄</a>
                    </div>
                </div>
            </div>
        </nav>
        <hr />
    </div>

    <div id="Memberinfo">
        <div class="container" v-for="favorite in MemberFavorites.favoritesWithMembers" :key="favorite.memberFavoriteId">
            <ul v-for="member in favorite.members" :key="member.memberId">
                <li>{{ member.memberName }}</li>
                <li>一般會員</li>
                <li>{{ member.email }}</li>

                <li>年度累積消費金額 NT.{{ MemberFavorites.totalOrderAmount }}</li>
            </ul>
            <hr />
        </div>
    </div>
    @RenderBody()
</div>



<script>

    const memberIdFromSession = sessionStorage.getItem('memberId');
    if (!memberIdFromSession) {
        console.error("memberId not found in session storage");
        // You can also redirect the user or show an error message, if necessary.
    }

    Vue.createApp({
        data() {
            return {
                MemberFavorites: [],

                favoritesWithTrainersAndProducts1: [],
                favoritesWithTrainersAndProducts2: [],
                memberId: sessionStorage.getItem('memberId'),
                token: sessionStorage.getItem('token'),
                showTrainer: 'trainer'
            };
        },
        mounted() {
            if (!this.memberId || !this.token) {
                console.error("memberId or token not found in session storage");
                // You can also redirect the user or show an error message, if necessary.
                return;
            }
            this.MemberFavorite();
        },
        methods: {
            MemberFavorite() {

                const headers = new Headers();
                headers.append('Authorization', `Bearer ${this.token}`);

                if (!memberIdFromSession) {
                    console.error("memberId not provided in the session");
                    return;
                }

                // Assuming the token is stored in the session storage.
                // Adjust if it's stored elsewhere.
                const token = sessionStorage.getItem('token');
                if (token) {
                    headers.append('Authorization', `Bearer ${token}`);
                }

                fetch(`https://localhost:7011/api/MemberFavorite/${this.memberId}`, {
                    headers: headers
                })
                    .then((response) => {
                        if (!response.ok) {
                            return response.text().then(text => {
                                throw new Error(`API request failed with status ${response.status}: ${text}`);
                            });
                        }
                        return response.json();
                    })
                    .then((data) => {
                        console.log(data);
                        this.MemberFavorites = data;
                    })
                    .catch((error) => {
                        console.error("API 請求失敗: " + error.message);
                    });
            },
        },
    }).mount('#Memberinfo')
</script> 
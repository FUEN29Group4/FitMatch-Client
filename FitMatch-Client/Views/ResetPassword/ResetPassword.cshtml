
@{
    Layout = null;
    ViewData["Title"] = "ResetPassword";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11.3.0/dist/sweetalert2.all.min.js"></script>

<style>
    html, body {
        height: 100%;
        margin: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: black;
    }

    .reset-password-container {
        text-align: center;
        background-color: #F24B88;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    }

    .btn-primary {
        background-color: black;
        border-color: black;
    }

        .btn-primary:hover {
            background-color: #333;
            border-color: #333;
        }

</style>

<div class="reset-password-container">
    <h3>重置密碼</h3>
    <form id="reset-password-form">
        <div class="mb-3">
            <label for="newPassword" class="form-label">新密碼:</label>
            <input type="password" id="newPassword" name="newPassword" class="form-control" required>
        </div>
        <div class="mb-3">
            <label for="confirmPassword" class="form-label">確認新密碼:</label>
            <input type="password" id="confirmPassword" name="confirmPassword" class="form-control" required>
        </div>
        <input type="hidden" id="token" name="token">
        <button type="submit" class="btn btn-primary">提交</button>
    </form>
</div>



<script>
    document.addEventListener("DOMContentLoaded", function () {
        const urlParams = new URLSearchParams(window.location.search);
        const token = urlParams.get('token');

        if (token) {
            document.getElementById('token').value = token;
        }

        const form = document.getElementById('reset-password-form');
        form.addEventListener('submit', function (event) {
            event.preventDefault();

            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;

            if (newPassword !== confirmPassword) {
                Swal.fire('兩次輸入的密碼不一致.');
                return;
            }

            const payload = {
                newPassword: newPassword,
                token: token
            };

            fetch('https://localhost:7011/api/Login/resetPassword', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(payload),
            })
                .then(response => {
                    const contentType = response.headers.get("content-type");
                    if (contentType && contentType.includes("application/json")) {
                        return response.json();
                    }
                    return response.text();
                })
                .then(data => {
                    if (typeof data === 'object' && data !== null) {
                        if (data.success) {
                            Swal.fire('成功', '密碼重置成功', 'success').then(() => {
                                window.location.href = "/Login/Login";
                            });
                        } else {
                            Swal.fire('錯誤', '密碼重置失敗', 'error');
                        }
                    } else {
                        Swal.fire('錯誤', data, 'error'); // 當回應是純文本時
                    }
                })
                .catch((error) => {
                    console.error('Error:', error);
                    Swal.fire('錯誤', '重置密碼過程中出現錯誤', 'error');
                });
        });
    });

</script>
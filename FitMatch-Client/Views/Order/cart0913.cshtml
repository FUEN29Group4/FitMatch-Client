@{
    ViewData["Title"] = "cart0913";
}



@*  ======  增加之後待使用 start ====== *@
<!-- 增加Vue跟axios跟jQuery 函式庫CDN-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.5.0/axios.js"></script>
<script src="https://unpkg.com/vue@3"></script>
<script src="https://unpkg.com/vuex@4"></script>




<style>
    body {
        font: normal 18px Tahoma,Arial,Verdana;
    }

    #myCart {
        margin: 0 auto;
        width: 900px;
        border: 1px solid #fff;
    }

    input {
        width: 60px;
    }

    tr {
        border-bottom: 1px dotted #aaa;
    }

    td {
        margin: 0px;
        padding: 1px 10px 4px 10px;
        border-bottom: 1px dotted #ccc;
        text-align: left;
        vertical-align: top;
    }

    #cartList {
        font-size: medium;
        font-weight: 800;
        border-bottom: 1px solid #aaa;
    }

    #subtotal {
        font-size: medium;
        font-weight: 600;
        color: Maroon;
    }
</style>


<div id="myCart">
    <h1>
        Shopping Cart
    </h1>
    <header id="cartList">
        <table style="border-bottom:1px solid #ddd;">
            <tr class="itemHead">
                <td style="width:200px;">Item List</td>
                <td style="width:280px;"></td>
                <td style="width:170px;">Price($)</td>
                <td style="width:60px;">Item(s)</td>
            </tr>
        </table>
        <!-- ===動態新增=== -->
        <!--
        <div>
            <table>
                <tr class="item">
                    <td style="width:200px;">
                        <img src="imgs/formosa.jpg" width="70">
                    </td>
                    <td style="width:280px;" id="A1001">
                        <p>Formosa</p>
                        <button>Delete</button>
                    </td>
                    <td style="width:170px;">
                        5000
                    </td>
                    <td style="width:60px;">
                        <input type="number" value="1" min="1">
                    </td>
                </tr>
            </table>
        </div>
        -->
    </header>
    <footer style="text-align:right;">
        Total : <span id="total">0</span>
    </footer>
</div>



<script>let storage = localStorage
    function doFirst() {
        let itemString = storage.getItem('addItemList')
        let items = itemString.substring(0, itemString.length - 2).split(', ')
        // console.log(items)  // ['A1001', 'A1005', 'A1006', 'A1002']

        newDiv = document.createElement('div')
        newTable = document.createElement('table')

        // 將 table 放進 div，再將 div 放進 cartList
        newDiv.appendChild(newTable)
        document.getElementById('cartList').appendChild(newDiv)

        total = 0
        for (let i = 0; i < items.length; i++) {
            let itemInfo = storage.getItem(items[i])
            total += parseInt(itemInfo.split('|')[2])

            // 呼叫函數建立 <tr>
            createCartList(items[i], itemInfo)
        }
        document.getElementById('total').innerText = total
    }
    function createCartList(itemId, itemValue) {
        // alert(`${itemId}: ${itemValue}`)
        let itemTitle = itemValue.split('|')[0]
        let itemImage = 'imgs/' + itemValue.split('|')[1]
        let itemPrice = parseInt(itemValue.split('|')[2])

        // 建立每個品項的清單區域 -- tr
        let trItemList = document.createElement('tr')
        trItemList.className = 'item'

        newTable.appendChild(trItemList)

        // 建立商品圖片 -- 第一個 td
        let tdImage = document.createElement('td')
        tdImage.style.width = '200px'

        let image = document.createElement('img')
        image.src = itemImage
        image.width = 70

        tdImage.appendChild(image)
        trItemList.appendChild(tdImage)

        // 建立商品名稱和刪除按鈕 -- 第二個 td
        let tdTitle = document.createElement('td')
        tdTitle.style.width = '280px'
        tdTitle.id = itemId

        let pTitle = document.createElement('p')
        pTitle.innerText = itemTitle

        let delButton = document.createElement('button')
        delButton.innerText = 'Delete'
        delButton.addEventListener('click', deleteItem)

        tdTitle.appendChild(pTitle)
        tdTitle.appendChild(delButton)

        trItemList.appendChild(tdTitle)

        // 建立商品價格 -- 第三個 td
        let tdPrice = document.createElement('td')
        tdPrice.style.width = '170px'
        tdPrice.innerText = itemPrice

        trItemList.appendChild(tdPrice)

        // 建立商品數量 -- 第四個 td
        let tdItemCount = document.createElement('td')
        tdItemCount.style.width = '60px'

        let inputItemCount = document.createElement('input')
        inputItemCount.type = 'number'
        inputItemCount.value = 1
        inputItemCount.min = 1
        inputItemCount.addEventListener('input', changeItemCount)

        tdItemCount.appendChild(inputItemCount)
        trItemList.appendChild(tdItemCount)
    }
    function deleteItem(e) {
        // 找到刪除按鈕的那個品項的 id
        let itemId = e.target.parentNode.id

        // 1 扣除總金額，若要完成作業也要修改此處
        let itemValue = storage.getItem(itemId)

        // 作業: 找到刪除按鈕的那個品項的 inputItemCount 的 value 值

        total -= parseInt(itemValue.split('|')[2])

        document.getElementById('total').innerText = total

        // 2 清除 storage
        storage.removeItem(itemId)

        // let value = storage.getItem('addItemList')
        // let newValue = value.replace(`${itemId}, `,``)
        // storage.setItem('addItemList', newValue)

        storage['addItemList'] = storage['addItemList'].replace(`${itemId}, `, ``)

        // 3 刪除該筆 tr
        // e.target.parentNode.parentNode.parentNode.removeChild(e.target.parentNode.parentNode)
        newTable.removeChild(e.target.parentNode.parentNode)
    }
    function changeItemCount() {
        alert('這是作業')
    }
    window.addEventListener('load', doFirst);</script>

@{
}

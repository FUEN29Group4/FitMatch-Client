@{
    ViewBag.SubLayout = "Trainer";
    Layout = "~/Views/Shared/_TrainerLayout.cshtml";
}


<!-- 周曆 -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js'></script>



    <style>
        /* 預約區塊 */
        .fc-scrollgrid {
            background-color: #f8f9fa;

        }

        .fc-theme-standard .fc-scrollgrid,
        .fc td,
        .fc th {
            border-color: #6C7293;
        }

        .fc-col-header-cell-cushion {
            color: #2c2b2b;
        }

        .fc-scrollgrid-shrink-frame {
            color: #a7a7b8;
        }

        .fc-timegrid-slot-label-cushion {
            margin-top: 10px;
            color: #2c2b2b;

        }

     
         table th {
            text-align: center;
            white-space: pre-line;
            /* 換行保留 */
            color: #ffff;
            font-weight: normal;
        }

         .time-cell {
            text-align: center;
            font-size: 18px;
            color: #ffff;
        }

         .btn-primary:focus {
            color: #fff;
            background-color: #BF3B6C;
            border-color: #BF3B6C;
            box-shadow: 0 0 0 .25rem #582337;
        }

        .fc-timegrid-slot-label-cushion {
            height: 40px;
        }

        .fc-toolbar-title {
            color: #f24b88;
          
        }
        .fc .fc-toolbar-title{
             text-align: center;
        }
        .fc-day {
            background-color: #fff;
        }

        .fc-day-today {
            background-color: #afafaf88 !important;

        }

        .fc-event-main {
            display: flex;
            align-items: center;
            justify-content: center;

        }

        

        .fc-timegrid-event .fc-event-main {
            padding: 0;
        }

         .available:hover {
            background-color: rgb(1, 100, 1);
        }

         .booked {
            background-color: grey;
            pointer-events: none;
        }

        #addButton {
            position: absolute;
            top: 10px;
            /* 调整按钮的垂直位置 */
            left: 10px;
            /* 调整按钮的水平位置 */
            z-index: 1;
            /* 确保按钮位于日历的上方 */
            /* 其他样式属性 */
        }

        input[type="text"] {
            width: 100%;
            padding: 12px 20px;
            margin: 8px 0;
            box-sizing: border-box;
        }

        button {
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }
        
    </STyle>
     
    
    <div class="container bg-white">
        <div class="date" id="calendar">
        </div>
    </div>


<script>
var calendar;
var todayGymName = "";

// 將格式化時間的功能封裝成函數
function formatTime(date) {
    return `${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;
}

function loadEvents() {
    const trainerId = new URLSearchParams(window.location.search).get("id");

    if (!trainerId) {
        console.error('TrainerId is missing from the URL');
        return;
    }

    fetch("https://localhost:7011/api/TrainerClass/" + trainerId)
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            if (Array.isArray(data)) {
                populateEvents(data);
            } else {
                throw new Error('Unexpected data format');
            }
        })
  .catch(error => {
            console.error('Error loading events:', error);
            Swal.fire({
                icon: 'error',
                title: '错误',
                text: '加载预约数据时发生错误，请刷新页面重试。'
            });
        });
}

function getGymsForDate(date) {
    let dateEvents = calendar.getEvents().filter(event => {
        const eventDate = event.start;
        return eventDate.getFullYear() === date.getFullYear() && 
               eventDate.getMonth() === date.getMonth() &&
               eventDate.getDate() === date.getDate() && 
               event.allDay;
    });
    
    // 如果当天有多个全天事件（应该不会），则将它们的标题（也就是健身房名称）合并
    return dateEvents.map(event => event.title).join(', ');
}
function populateEvents(data) {
    const gymNamesByDate = {};

    data.forEach(eventData => {
        const eventDate = new Date(eventData.startTime);
        const dateKey = eventDate.toISOString().split('T')[0]; // 獲得 YYYY-MM-DD 格式的日期

        if (!gymNamesByDate[dateKey]) {
            gymNamesByDate[dateKey] = new Set(); // 使用 Set 以確保健身房名稱不重複
        }

        gymNamesByDate[dateKey].add(eventData.gymName);
    });

    // 加入健身房名稱為全天事件
    for (let [date, gymNamesSet] of Object.entries(gymNamesByDate)) {
        const allGymNames = Array.from(gymNamesSet).join(', ');

        calendar.addEvent({
            title: allGymNames,
            start: new Date(date),
            allDay: true
        });
    }


    // 將其他事件加入到日曆上
    data.forEach(eventData => {
        const startTime = formatTime(new Date(eventData.startTime));
        const endTime = formatTime(new Date(eventData.endTime));
        
        let eventTitle = '';
        let eventColor = 'green'; // 預設顏色為藍色

        if (eventData.courseStatus === '已過期' || eventData.courseStatus === '已完成') {
            eventTitle = '已結束';
            eventColor = 'gray';
        } else {
            eventTitle = eventData.memberName 
                ? `${startTime}-${endTime} ${eventData.memberName}`
                : `${startTime}-${endTime} 未預約`;
        }

        calendar.addEvent({
            title: eventTitle,
            start: new Date(eventData.startTime),
            end: new Date(eventData.endTime),
            backgroundColor: eventColor,
            borderColor: eventColor,
            extendedProps: {
                memberName: eventData.memberName,
                className: eventData.className,
                gymName: eventData.gymName,
                courseStatus: eventData.courseStatus
            }
        });
    });
}


function formatDateToISO(date) {
    var year = date.getFullYear();
    var month = (date.getMonth() + 1).toString().padStart(2, '0');
    var day = date.getDate().toString().padStart(2, '0');
    return `${year}-${month}-${day}`;
}
function openVenueModal(date) {
    // 先获取场馆信息
    fetch('https://localhost:7011/api/Match/Gym')
    .then(response => response.json())
    .then(data => {
        // 假设 data 是一个场馆名称的数组
        const gymOptions = data.map(gym => {
            return `<option value="${gym.gymId}">${gym.gymName}</option>`;
        }).join('');

        Swal.fire({
            title: '新增场馆',
            html: `
                日期: <strong>${date.toLocaleDateString()}</strong><br>
                場館名稱: 
                <select id="gym-select">
                    ${gymOptions}
                </select>
            `,
            showCancelButton: true,
            confirmButtonText: '添加',
            cancelButtonText: '取消',
            preConfirm: () => {
            // 使用 Swal 获取 select 的选择的文本（即健身房的名稱）
            const selectElement = document.getElementById('gym-select');
            return selectElement.options[selectElement.selectedIndex].text;
            }
        }).then((result) => {
            if (result.isConfirmed) {
                const venueName = result.value;
                if (venueName) {
                    const event = {
                        title: venueName,
                        start: date,
                        allDay: true,
                        extendedProps: {
                            venue: venueName
                        }
                    };

                    calendar.addEvent(event);
                    Swal.fire({
                        icon: 'success',
                        title: '場館已創建',
                        text: '日期: ' + date.toLocaleDateString() + '，場館名稱: ' + venueName
                    });
                }
            }
        });
    })
    .catch(error => {
        console.error('Error fetching gyms:', error);
        Swal.fire({
            icon: 'error',
            title: '错误',
            text: '加载场馆数据时发生错误，请刷新页面重试。'
        });
    });
}


function openTimeSlotModal(date) {
    // 计算结束时间，此处假定预约时间为1小时
    let endDate = new Date(date);
    endDate.setHours(endDate.getHours() + 1);

    Swal.fire({
        title: '预约时段: ' + formatTime(date) + ' - ' + formatTime(endDate),
        input: 'text',
        inputLabel: '会员名称',
        inputPlaceholder: '请输入会员名称',
        showCancelButton: true,
        confirmButtonText: '预约',
        cancelButtonText: '取消'
    }).then((result) => {
        if (result.isConfirmed) {
            const memberName = result.value;
            if (memberName) {
                const event = {
                    title: '已预约: ' + memberName,
                    start: date,
                    end: endDate,
                    backgroundColor: 'blue',
                    borderColor: 'blue'
                };

                calendar.addEvent(event);
                Swal.fire({
                    icon: 'success',
                    title: '已预约'
                });
            } else {
                Swal.fire({
                    icon: 'warning',
                    title: '请输入会员名称'
                });
            }
        }
    });
}

function formatTime(date) {
    let hours = date.getHours();
    let minutes = date.getMinutes();
    let period = 'AM';

    if (hours >= 12) {
        period = 'PM';
        hours = hours > 12 ? hours - 12 : hours; // 如果超过12，将其转换为12小时制
    }

    return (hours < 10 ? '0' : '') + hours + ':' + (minutes < 10 ? '0' : '') + minutes + ' ' + period;
}




document.addEventListener('DOMContentLoaded', function () {
    var calendarEl = document.getElementById('calendar');
    calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'timeGridWeek',
        contentHeight: 'auto',
        slotDuration: '01:00:00',   // 这里设置每个时间槽为1小时
        slotMinTime: '09:00:00',
        slotMaxTime: '21:00:00',   // 注意，这是下一小时的开始，所以是21:00，表示最后一个时间槽是20:00-21:00
        displayEventTime: false,
        allDayText: '场馆',
         headerToolbar: {
                        left: 'prev',
                        center: 'title',
                        right: 'next today'
                    },
dayHeaderContent: function (headerInfo) {
    var container = document.createElement('div');
    container.style.display = 'flex';
    container.style.flexDirection = 'column';
    container.style.alignItems = 'center'; // 讓內容居中

    var dateElem = document.createElement('div');
    dateElem.innerText = headerInfo.date.toLocaleDateString();
    container.appendChild(dateElem);

    var btn = document.createElement('button');
    btn.innerText = '新增場館';
    btn.style.marginTop = '5px'; // 增加上邊距，使按鈕不會遮擋場館名稱
    btn.addEventListener('click', function () {
        openVenueModal(headerInfo.date);
    });
    container.appendChild(btn);

    return { domNodes: [container] };
},


        dateClick: function(info) {
            openTimeSlotModal(info.date);
        }
    });

    calendar.render();

    loadEvents();
});


</script>


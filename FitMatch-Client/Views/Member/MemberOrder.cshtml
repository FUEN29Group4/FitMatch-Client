@{
    ViewBag.SubLayout = "MemberOrder";
    Layout = "~/Views/Shared/_MemberLayout.cshtml";
}


<link rel="stylesheet" href="~/css/memberclass.css">




<div>
    <!-- 訂單區start -->
    <table class="table container table-hover table-bordered">
        <thead>
            <tr>
                <th>訂單編號</th>
                <th>訂購時間</th>
                <th>總價</th>
                <th>支付方式</th>
                <th>取貨方式</th>
                <!-- <th>訂單狀態</th> -->
                <th colspan="2">付款時間</th>
            </tr>
        </thead>

        <tbody id="app">
            <tr v-for="order in orders" :key="order.orderId" @@click="showOrderDetail(order.orderId)">
                <td>{{ order.orderId }}</td>
                <td>{{ formatDate(order.orderTime) }}</td>
                <td>$ {{ order.totalPrice }}</td>
                <td>{{ order.paymentMethod }}</td>
                <td>{{ order.shippingMethod }}</td>
                <td>{{ formatDate(order.payTime) }}</td>
            </tr>
        </tbody>


    
    </table>
</div>




<script>
    Vue.createApp({
        data() {
            return {
                memberId: sessionStorage.getItem('memberId'),
                token: sessionStorage.getItem('token'),
                orders: [],
                orderDetail: null  // 儲存單一訂單的詳細資訊
            };
        },

        mounted() {
            if (!this.memberId || !this.token) {
                console.error("memberId or token not found in session storage");
                return;
            }
            this.fetchOrders();
        },

        methods: {
            // 建立一個共用的方法來取得headers
            getHeaders() {
                const headers = new Headers();
                headers.append('Authorization', `Bearer ${this.token}`);
                return headers;
            },

            fetchOrders() {
                fetch(`https://localhost:7011/api/OrderAPI/Order?id=${this.memberId}`, {
                    headers: this.getHeaders()  // 使用共用方法取得headers
                })
                    .then(response => {
                        if (!response.ok) {
                            return response.text().then(text => {
                                throw new Error(`API request failed with status ${response.status}: ${text}`);
                            });
                        }
                        return response.json();
                    })
                    .then(data => {
                        this.orders = data.orderWithMember;
                    })
                    .catch(error => {
                        console.error("API 請求失敗: " + error.message);
                    });
            },

            formatDate(input) {
                const date = new Date(input);
                return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;
            },

            showOrderDetail(orderId) {
                fetch(`https://localhost:7011/api/OrderAPI/OrderDetail?id=${orderId}`, {
                    headers: this.getHeaders()  // 使用共用方法取得headers
                })
                    .then(response => {
                        if (!response.ok) {
                            return response.text().then(text => {
                                throw new Error(`API request failed with status ${response.status}: ${text}`);
                            });
                        }
                        return response.json();
                    })
                    .then(data => {
                        this.orderDetail = data.OrderDetailWithMember;

                        // TODO: 顯示訂單詳細資訊的邏輯，例如彈出modal
                    })
                    .catch(error => {
                        console.error("API 請求失敗: " + error.message);
                    });
            }
        },
    }).mount('#app');

</script>
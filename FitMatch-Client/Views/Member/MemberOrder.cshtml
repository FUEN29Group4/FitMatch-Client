@{
    ViewBag.SubLayout = "MemberOrder";
    Layout = "~/Views/Shared/_MemberLayout.cshtml";
}

<link rel="stylesheet" href="~/css/memberclass.css">

<meta name="api-base-url" content="https://localhost:7011">


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<style>

    .table-centered td,
    .table-centered th {
        vertical-align: middle; /* 垂直置中 */
        text-align: center; /* 水平置中 */
    }

</style>


<div id="app">
    <div>
        <!-- 訂單區start -->
        <table class="table  table-hover">
            <thead style="background-color:#F24B88">
                <tr>
                    <th>訂單編號</th>
                    <th>訂購時間</th>
                    <th>總價</th>
                    <th>支付方式</th>
                    <th>取貨方式</th>
                    @*<th>付款時間</th>*@
                    <th></th>
                </tr>
            </thead>

            <tbody>
                <tr v-for="order in orders" :key="order.orderId">
                    <td>{{ order.orderId }}</td>
                    <td>{{ formatDate(order.orderTime) }}</td>
                    <td>$ {{ order.totalPrice }}</td>
                    <td>{{ order.paymentMethod }}</td>
                    <td>{{ order.shippingMethod }}</td>
                    @*<td>{{ formatDate(order.payTime) }}</td>*@
                    <td>
                        <button type="button"
                                class="btn btn-primary btn-space"
                                style="background-color: #F24B88; color: aliceblue;border-radius:5px"
                                @@click="showOrderDetail(order.orderId)">
                            訂單紀錄
                        </button>
                    </td>
                </tr>

            </tbody>
        </table>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="orderDetailModal" tabindex="-1" role="dialog" aria-labelledby="orderDetailModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document">

            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title mx-auto" style="color:black">訂單明細</h4>

                </div>

                <!-- 訂單詳細內容 -->
                <div class="modal-body">
                    <table class="table table-bordered table-hover table-centered ">
                        <thead style="background-color: #F24B88;">
                            <tr>
                                <th>商品照片</th>
                                <th>商品名稱</th>
                                <th>單價</th>
                                <th>數量</th>
                                <th>總價</th>
                            </tr>
                        </thead>
                        <tbody v-if="orderDetail && orderDetail.orderDetailWithMember">
                            <tr v-for="memberdetail in orderDetail.orderDetailWithMember" :key="memberdetail.OrdertailId">

                                <td><img :src="'data:image/jpeg;base64,' + memberdetail.products[0].photo" alt="Product Image" style="width: 110px; height: 110px; object-fit: cover;" /></td>
                                <td>{{ memberdetail.products[0].productName }}</td>
                                <td>{{ memberdetail.products[0].price }}</td>
                                <td>{{ memberdetail.quantity }}</td>
                                <td>{{ memberdetail.products[0].price * memberdetail.quantity }}</td>
                            </tr>
                        </tbody>

                    </table>
                </div>
                <div class="modal-footer ">

                    <button type="button" style="border-radius:5px;width:80px" class="btn btn-primary" data-bs-dismiss="modal">關閉</button>

                    <button type="button" style="border-radius:5px;width:120px" class="swal2-confirm swal2-styled" data-bs-dismiss="modal" id="liveToastBtn" @@click="rebuyItems">再次購買</button>

                </div>

              


            </div>
        </div>
    </div>


    <!-- 再次購買提示框 -->

    <div class="position-fixed bottom-0 end-0 p-3 " style="z-index: 11">
        <div id="liveToast" class="toast " role="alert" aria-live="assertive" aria-atomic="true" style="background-color:#F24B88">
            <div class="toast-header">
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body" style="color:#fff">
                商品已全加入購物車
            </div>
        </div>
    </div>

</div>



<script>



    Vue.createApp({
        data() {
            return {
                memberId: sessionStorage.getItem('memberId'),
                token: sessionStorage.getItem('token'),
                orders: [],
                orderDetail: [],  // 注意這裡改成首字母小寫
                orderDetailWithMember: [],

            };
        },

        mounted() {
            if (!this.memberId) {
                console.error("memberId not found in session storage");
                return;
            }
            this.fetchOrders();

        },

        methods: {
            getHeaders() {
                const headers = new Headers();
                headers.append('Authorization', `Bearer ${this.token}`);
                return headers;
            },

            fetchOrders() {


                // fetch(`https://localhost:7011/api/OrderAPI/Order?id=${this.memberId}`, {

                fetch(`https://localhost:7011/api/OrderAPI/Order?id=${this.memberId}`, {



                    headers: this.getHeaders()
                })
                    .then(response => {
                        if (!response.ok) {
                            return response.text().then(text => {
                                throw new Error(`API request failed with status ${response.status}: ${text}`);
                            });
                        }
                        return response.json();
                    })
                    .then(data => {
                        this.orders = data.orderWithMember;
                    })
                    .catch(error => {
                        console.error("API 請求失敗: " + error.message);
                    });
            },

            formatDate(input) {
                const date = new Date(input);
                return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;
            },
            showOrderDetail(orderId) {
                // 先清空之前的數據

                // fetch(`https://localhost:7011/api/OrderAPI/OrderDetail?oid=${orderId}`, {

                fetch(`https://localhost:7011/api/OrderAPI/OrderDetail?oid=${orderId}`, {
                    headers: this.getHeaders()
                })
                    .then(response => {
                        if (!response.ok) {
                            return response.text().then(text => {
                                throw new Error(`API request failed with status ${response.status}: ${text}`);
                            });
                        }
                        return response.json();
                    })
                    .then((data) => {
                        console.log(data);  // 查看完整的API回應

                        this.orderDetail = data;

                        $('#orderDetailModal').modal('show');
                        // } else {
                        //     console.error("Unexpected API response structure");
                        //     console.log(data);  // 再次打印數據以進行檢查
                        //     $('#orderDetailModal').modal('show');
                        // }
                    })

                    .catch(error => {
                        console.error("API 請求失敗: " + error.message);
                    });
            },



            //添加購物車--------start--------
            //添加購物車--------start--------
            rebuyItems() {
                console.log("rebuyItems is called");
                if (this.orderDetail && this.orderDetail.orderDetailWithMember) {
                    this.orderDetail.orderDetailWithMember.forEach(memberdetail => {
                        console.log("Adding product to cart:", memberdetail.products[0].productName);
                        this.addToCart(memberdetail.products[0]);
                    });
                }
                this.showToast();  // 這行呼叫了下面的 showToast 方法
            },
            addToCart(product) {
                console.log("addToCart is called with product:", product.productName);
                const itemValue = `${product.productName}|已加入購物車品項|${product.price}`;
                const itemId = `${product.productId}`;

                // 存储到localStorage
                if (localStorage.getItem(itemId)) {
                    const existingItem = localStorage.getItem(itemId);
                    const existingQuantity = parseInt(existingItem.split('|')[3]); // 假設數量是第四個字段
                    const updatedQuantity = existingQuantity + 1; // 或者其他你想增加的數量

                    // 更新存儲的商品信息
                    const updatedItemValue = `${product.productName}|已加入購物車品項|${product.price}|${updatedQuantity}`;
                    localStorage.setItem(itemId, updatedItemValue);
                } else {
                    const addItemList = localStorage.getItem('addItemList') || '';
                    localStorage.setItem('addItemList', `${addItemList}${itemId}, `);
                    localStorage.setItem(itemId, itemValue);
                    // alert('商品已加入購物車');
                    // this.updateCartCountAndTotal(); // 如果你需要它，記得調用它
                }
            },
            showToast() {
                var toastEl = document.getElementById('liveToast');
                var toast = new bootstrap.Toast(toastEl, {
                    delay: 1500  // Toast將在2秒後消失
                });
                toast.show();
            },




            //添加購物車--------End--------
            //添加購物車--------End--------

        },
    }).mount('#app');
</script>

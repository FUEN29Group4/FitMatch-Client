@{
    ViewBag.SubLayout = "MemberOrder";
    Layout = "~/Views/Shared/_MemberLayout.cshtml";
}


<link rel="stylesheet" href="~/css/memberclass.css">
<div>
    <!-- 訂單區start -->
    <table class="table container table-hover table-bordered">
        <thead>
            <tr>
                <th>訂單編號</th>
                <th>訂購時間</th>
                <th>總價</th>
                <th>支付方式</th>
                <th>取貨方式</th>
                <!-- <th>訂單狀態</th> -->
                <th colspan="2">付款時間</th>
            </tr>
        </thead>

        <tbody id="app">
            <tr v-for="order in orders" :key="order.orderId">
                <td>{{ order.orderId }}</td>
                <td>{{ formatDate(order.orderTime) }}</td>
                <td>$ {{ order.totalPrice }}</td>
                <td>{{ order.paymentMethod }}</td>
                <td>{{ order.shippingMethod }}</td>
                <td>{{ formatDate(order.payTime) }}</td>
            </tr>
        </tbody>

    
    </table>
</div>




<script>
    Vue.createApp({
        data() {
            return {
                MemberFavorites: [],
                favoritesWithTrainersAndProducts1: [],
                favoritesWithTrainersAndProducts2: [],
                memberId: sessionStorage.getItem('memberId'),
                token: sessionStorage.getItem('token'),
                showTrainer: 'trainer',
                orders: [],
            };
        },

        mounted() {
            if (!this.memberId || !this.token) {
                console.error("memberId or token not found in session storage");
                return;
            }
            this.fetchOrders();
        },

        methods: {
            fetchOrders() {
                const headers = new Headers();
                headers.append('Authorization', `Bearer ${this.token}`);

                if (!this.memberId) {
                    console.error("ID not provided in the URL");
                    return;
                }

                fetch(`https://localhost:7011/api/OrderAPI/Order?id=${this.memberId}`, {
                    headers: headers
                })
                    .then((response) => {
                        if (!response.ok) {
                            return response.text().then(text => {
                                throw new Error(`API request failed with status ${response.status}: ${text}`);
                            });
                        }
                        return response.json();
                    })
                    // .then((data) => {
                    //     console.log(data);
                    //     this.orders = data;
                    // })
                    .then((data) => {
                        console.log(data);
                        this.orders = data.orderWithMember; // Note the change here
                    })

                    .catch((error) => {
                        console.error("API 請求失敗: " + error.message);
                    });
            },
            formatDate(input) {
                const date = new Date(input);
                const year = date.getFullYear();
                const month = (date.getMonth() + 1).toString().padStart(2, '0');
                const day = date.getDate().toString().padStart(2, '0');
                const hours = date.getHours().toString().padStart(2, '0');
                const minutes = date.getMinutes().toString().padStart(2, '0');

                return `${year}-${month}-${day} ${hours}:${minutes}`;
            },
        },
    }).mount('#app')
</script>




@* <script>
    Vue.createApp({
        data() {
            return {
                OrderWithMember:[],
            };
        },
        mounted() {
            this.OrderWithMember();
        },
        methods: {
            fetchOrders() {
                // 根據你的 API URL 更新以下 URL
                fetch('/api/OrderAPI/Order')
                    .then(response => response.json())
                    .then(data => {
                        this.orders = data; // 視 API 回傳的數據結構調整此行
                    })
                    .catch(error => console.error('Error fetching orders:', error));
            }
        }
    }).mount('#app')
</script>
 *@


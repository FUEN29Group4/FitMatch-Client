@{
    ViewBag.SubLayout = "MemberOrder";
    Layout = "~/Views/Shared/_MemberLayout.cshtml";
}


<link rel="stylesheet" href="~/css/memberclass.css">
<div>
    <!-- 訂單區start -->
    <table class="table container table-hover table-bordered">
        <thead>
            <tr>
                <th>訂單編號</th>
                <th>訂購時間</th>
                <th>總價</th>
                <th>支付方式</th>
                <th>取貨方式</th>
                <!-- <th>訂單狀態</th> -->
                <th colspan="2">付款時間</th>
            </tr>
        </thead>

        <tbody id="app">
            <tr v-for="order in Orders" :key="order.OrderId">
                <td>{{ order.OrderId }}</td>
                <td>{{ order.OrderTime }}</td>
                <td>$ {{ order.TotalPrice }}</td>
                <td>{{ order.PaymentMethod }}</td>
                <td>{{ order.ShippingMethod }}</td>
                <td>{{ order.PayTime }}</td>
            </tr>
        </tbody>
    </table>
</div>



@* <script>
    Vue.createApp({
        data() {
            return {
                OrderWithMember:[],
            };
        },
        mounted() {
            this.OrderWithMember();
        },
        methods: {
            fetchOrders() {
                // 根據你的 API URL 更新以下 URL
                fetch('/api/OrderAPI/Order')
                    .then(response => response.json())
                    .then(data => {
                        this.orders = data; // 視 API 回傳的數據結構調整此行
                    })
                    .catch(error => console.error('Error fetching orders:', error));
            }
        }
    }).mount('#app')
</script>
 *@
<script>
    Vue.createApp({

        data() {
            return {
                orders:[],
                OrderWithMember: [],
            };
        },
        mounted() {
            this.Order();
        },
        methods: {
            Order() {
                let urlParams = new URLSearchParams(window.location.search);
                let id = urlParams.get('id');  // 從URL中獲取id

                if (!id) {
                    console.error("ID not provided in the URL");
                    return;
                }

                fetch(`https://localhost:7011/api/OrderAPI/Order${id}`)
                    .then((response) => {
                        if (!response.ok) {
                            return response.text().then(text => {
                                throw new Error(`API request failed with status ${response.status}: ${text}`);
                            });
                        }
                        return response.json();
                    })
                    .then((data) => {
                        this.orders = data;
                    })
                    .catch((error) => {
                        console.error("API 請求失敗: " + error.message);
                    });
            },
        },
    }).mount('#app')

</script>
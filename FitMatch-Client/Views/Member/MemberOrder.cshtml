@{
    ViewBag.SubLayout = "MemberOrder";
    Layout = "~/Views/Shared/_MemberLayout.cshtml";
}

<link rel="stylesheet" href="~/css/memberclass.css">


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<style>

    .table-centered td,
    .table-centered th {
        vertical-align: middle; /* 垂直置中 */
        text-align: center; /* 水平置中 */
    }

</style>


<div id="app">
    <div>
        <!-- 訂單區start -->
        <table class="table table-bordered table-hover">
            <thead style="background-color:#F24B88">
                <tr>
                    <th>訂單編號</th>
                    <th>訂購時間</th>
                    <th>總價</th>
                    <th>支付方式</th>
                    <th>取貨方式</th>
                    <th>付款時間</th>
                    <th></th>
                </tr>
            </thead>

            <tbody>
                <tr v-for="order in orders" :key="order.orderId">
                    <td>{{ order.orderId }}</td>
                    <td>{{ formatDate(order.orderTime) }}</td>
                    <td>$ {{ order.totalPrice }}</td>
                    <td>{{ order.paymentMethod }}</td>
                    <td>{{ order.shippingMethod }}</td>
                    <td>{{ formatDate(order.payTime) }}</td>
                    <td>
                        <button type="button"
                                class="btn btn-primary btn-space"
                                style="background-color: #F24B88; color: aliceblue;border-radius:5px"
                                @@click="showOrderDetail(order.orderId)">
                            訂單紀錄
                        </button>
                    </td>
                </tr>

            </tbody>
        </table>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="orderDetailModal" tabindex="-1" role="dialog" aria-labelledby="orderDetailModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title mx-auto" style="color:black">訂單明細</h4>
                </div>

                <!-- 訂單詳細內容 -->
                <div class="modal-body">
                    <table class="table table-bordered table-hover table-centered ">
                        <thead style="background-color: #F24B88;">
                            <tr>
                                <th>商品照片</th>
                                <th>商品名稱</th>
                                <th>單價</th>
                                <th>數量</th>
                                <th>總價</th>
                            </tr>
                        </thead>
                        <tbody v-if="orderDetail && orderDetail.orderDetailWithMember">
                            <tr v-for="memberdetail in orderDetail.orderDetailWithMember" :key="memberdetail.OrdertailId">

                                <td><img :src="'data:image/jpeg;base64,' + memberdetail.products[0].photo" alt="Product Image" style="width: 110px; height: 110px; object-fit: cover;" /></td>
                                <td>{{ memberdetail.products[0].productName }}</td>
                                <td>{{ memberdetail.products[0].price }}</td>
                                <td>{{ memberdetail.quantity }}</td>
                                <td>{{ memberdetail.products[0].price * memberdetail.quantity }}</td>
                            </tr>
                        </tbody>

                    </table>
                </div>
                <div class="modal-footer justify-content-center">
                    <button type="button" style="border-radius:5px;width:80px" class="swal2-confirm swal2-styled" data-bs-dismiss="modal">關閉</button>
                </div>

            </div>
        </div>
    </div>
</div>



<script>

    Vue.createApp({
        data() {
            return {
                memberId: sessionStorage.getItem('memberId'),
                token: sessionStorage.getItem('token'),
                orders: [],
                orderDetail: [],  // 注意這裡改成首字母小寫
                orderDetailWithMember: [],

            };
        },

        mounted() {
            if (!this.memberId) {
                console.error("memberId not found in session storage");
                return;
            }
            this.fetchOrders();

        },

        methods: {
            getHeaders() {
                const headers = new Headers();
                headers.append('Authorization', `Bearer ${this.token}`);
                return headers;
            },

            fetchOrders() {
                fetch(`https://localhost:7011/api/OrderAPI/Order?id=${this.memberId}`, {
                    headers: this.getHeaders()
                })
                    .then(response => {
                        if (!response.ok) {
                            return response.text().then(text => {
                                throw new Error(`API request failed with status ${response.status}: ${text}`);
                            });
                        }
                        return response.json();
                    })
                    .then(data => {
                        this.orders = data.orderWithMember;
                    })
                    .catch(error => {
                        console.error("API 請求失敗: " + error.message);
                    });
            },

            formatDate(input) {
                const date = new Date(input);
                return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;
            },
            showOrderDetail(orderId) {
                // 先清空之前的數據

                fetch(`https://localhost:7011/api/OrderAPI/OrderDetail?oid=${orderId}`, {
                    headers: this.getHeaders()
                })
                    .then(response => {
                        if (!response.ok) {
                            return response.text().then(text => {
                                throw new Error(`API request failed with status ${response.status}: ${text}`);
                            });
                        }
                        return response.json();
                    })
                    .then((data) => {
                        console.log(data);  // 查看完整的API回應

                        this.orderDetail = data;

                        $('#orderDetailModal').modal('show');
                        // } else {
                        //     console.error("Unexpected API response structure");
                        //     console.log(data);  // 再次打印數據以進行檢查
                        //     $('#orderDetailModal').modal('show');
                        // }
                    })

                    .catch(error => {
                        console.error("API 請求失敗: " + error.message);
                    });
            },

        },
    }).mount('#app');
</script>

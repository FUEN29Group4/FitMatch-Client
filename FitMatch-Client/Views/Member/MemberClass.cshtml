@{
    ViewData["Title"] = "MemberClass";
}

<script src="https://unpkg.com/vue@3"></script>
<script src="https://unpkg.com/vuex@4"></script>

<div style="background-color: #fff" id="app">
    <!-- Page Header Start -->
    <div class="container-fluid page-header py-5 mb-5 wow fadeIn" data-wow-delay="0.1s">
        <div class="container text-center py-5">
            <h1 class="display-3 text-white text-uppercase mb-3 animated slideInDown">Our Barber</h1>
            <nav aria-label="breadcrumb animated slideInDown">
                <ol class="breadcrumb justify-content-center text-uppercase mb-0">
                    <li class="breadcrumb-item"><a class="text-white" href="#">Home</a></li>
                    <li class="breadcrumb-item"><a class="text-white" href="#">Pages</a></li>
                    <li class="breadcrumb-item text-primary active" aria-current="page">Our Barber</li>
                </ol>
            </nav>
        </div>
    </div>
    <!-- Page Header End -->
    <!-- body start -->

    <div class="container ">
        <div class="container text-center">
            <nav style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='currentColor'/%3E%3C/svg%3E&#34;);"
                 aria-label="breadcrumb">
                <ol class="breadcrumb" style="color: rgb(0, 0, 0);">
                    <li class="breadcrumb-item"><a href="index.html" style="color: rgb(0, 0, 0);">首頁</a></li>
                    <li class="breadcrumb-item">
                        <a href="personal_member.html" style="color: rgb(0, 0, 0);">我的會員專區</a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">我的課表</li>
                </ol>
            </nav>
        </div>

        <div class="container">
            <nav class="navbar navbar-expand-lg bg-body-tertiary">
                <div class="container-fluid">
                    <div class="container member line">
                        <div class="nav" style="color: rgb(0, 0, 0);">
                            <a style="color: rgb(0, 0, 0);" href="personal_member.html"
                               class="nav-link nav-item ">基本資料</a>
                            <a style="color: rgb(0, 0, 0);" href="personal_member_Order_Traking.html"
                               class="nav-link nav-item">訂單查詢</a>
                            <a asp-area="" asp-controller="MemberFavorite" asp-action="MemberFavorite"
                               class="nav-link nav-item">收藏清單</a>
                            <a asp-area="" asp-controller="Member" asp-action="MemberClass"
                               class="nav-link nav-item">我的課表</a>
                            <a style="color: rgb(0, 0, 0);" href="personal_member_Customer_Service_Records.html"
                               class="nav-link nav-item">客服紀錄</a>
                        </div>
                    </div>
                </div>
            </nav>
        </div>

        @* 會員資料 *@
        <hr>
        <div class="container" v-for="classItem  in MemberClassAPIs.classAPIWithMembers" :key="classItem .memberClassAPIId">
            <ul v-for="member in classItem .members" :key="member.memberId">
                <li>{{ member.memberName }}</li>
                <li>一般會員</li>
                <li>{{ member.email }}</li>

                <li v-for="order in classItem .orders" :key="order.memberId">年度累積消費金額 NT.{{ order.totalPrice }}</li>
            </ul>
            <hr />
        </div>
        <hr>
        <div class="container">
            <button type="button" style="background-color: #F24B88" class="btn btn-primary personalBtn">
                <a style="color: aliceblue;" href="personal_member_My_Schedule.html">我的課表</a>
            </button>
            <button type="button" style="background-color: #ff005d" class="btn btn-primary personalBtn">
                <a style="color: aliceblue;" href="personal_member_My_Schedule_Record.html">我的課程紀錄</a>
            </button>
        </div>
        <hr>

        <div class="container">
            <div class="container">
                <table class="table table-bordered table-hover ">
                    <thead style="background-color: #F24B88;">
                        <tr>
                            <th>預約編號</th>
                            <th>教練</th>
                            <th>場館</th>
                            <th>課程狀態</th>
                            <th>課程時間</th>
                            <th>聯繫</th>
                        </tr>
                    </thead>

                    <tbody>

                    <template v-for="classApi in MemberClassAPIs.classAPIWithTrainersAndClassTyoeAndGyms">
                        <!-- 如果某些關鍵數據是空的，就只顯示"未添加課程" -->
                        <tr v-if="isEmptyClassData(classApi)">
                            <td colspan="6">未添加課程</td>
                        </tr>

                        <!-- 否則，顯示數據 -->
                        <tr v-else v-for="trainer in classApi.trainers" :key="trainer.trainerId">
                            <td>{{classApi.classId}}</td>
                            <td>{{classApi.trainers[0].trainerName}}</td>
                            <td>{{classApi.gyms[0].gymName}}</td>
                            <td>{{classApi.courseStatus}}</td>
                            <td>{{ formatTimeToDetailedDate(classApi.buildTime) }}</td>
                            <td>
                                <button type="button" style="background-color: #F24B88;color: aliceblue;" class="btn btn-primary personalBtn">聯繫教練</button>
                            </td>
                        </tr>
                    </template>

                    </tbody>

                </table>
               @*  <div class="container" style="padding-bottom: 50px;">
                    <nav aria-label="" style="float: right; margin-top: 20px;" class="plot ho">
                        <ul class="pagination plot ho" style="color:#F24B88">
                            <li class="page-item">
                                <a class="page-link" href="#" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                            <li class="page-item"><a class="page-link" href="#">1</a></li>
                            <li class="page-item"><a class="page-link" href="#">2</a></li>
                            <li class="page-item"><a class="page-link" href="#">3</a></li>
                            <li class="page-item">
                                <a class="page-link" href="#" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div> *@
            </div>
        </div>
    </div>
    <!-- body end -->
</div>


<script>
    Vue.createApp({

        data() {
            return {
                MemberClassAPIs: {
                    "classAPIWithTrainersAndClassTyoeAndGyms": [
                        {
                            "classId": 1,
                            "trainers": [
                                {
                                    "trainerId": 123,
                                    "trainerName": "John"
                                }
                            ],
                            "gyms": [
                                {
                                    "gymName": "Gym A"
                                }
                            ],
                            "courseStatus": "Active",
                            "buildTime": "10:00 AM"
                        }
                    ]
                },
            };
        },

        mounted() {
            this.MemberClassAPI();
        },
        methods: {
            MemberClassAPI() {
                let urlParams = new URLSearchParams(window.location.search);
                let id = urlParams.get('id');  // 從URL中獲取id

                if (!id) {
                    console.error("ID not provided in the URL");
                    return;
                }

                fetch(`https://localhost:7011/api/MemberClassAPI/${id}`)
                    .then((response) => {
                        if (!response.ok) {
                            return response.text().then(text => {
                                throw new Error(`API request failed with status ${response.status}: ${text}`);
                            });
                        }
                        return response.json();
                    })
                    .then((data) => {
                        this.MemberClassAPIs = data;
                    })

                    .catch((error) => {
                        console.error("API 請求失敗: " + error.message);
                    });
            },
            formatTimeToDetailedDate(dateTimeString) {
                const date = new Date(dateTimeString);
                if (isNaN(date.getTime())) {
                    return "NaN-NaN-NaN NaN:NaN";
                }
                const year = date.getFullYear();
                const month = String(date.getMonth() + 1).padStart(2, '0');
                const day = String(date.getDate()).padStart(2, '0');
                const hours = String(date.getHours()).padStart(2, '0');
                const minutes = String(date.getMinutes()).padStart(2, '0');
                return `${year}-${month}-${day} ${hours}:${minutes}`;
            }
            ,
            // ... within the Vue app's methods

            isEmptyClassData(classApi) {
                return !classApi.classId ||
                    !classApi.trainers || classApi.trainers.length === 0 || !classApi.trainers[0].trainerName ||
                    !classApi.gyms || classApi.gyms.length === 0 || !classApi.gyms[0].gymName ||
                    !classApi.courseStatus ||
                    !classApi.buildTime;
            },



        },
    }).mount('#app')

</script>

<style scoped>

    /* 圓形框框樣式 */
    .card-image img {
        width: 250px;
        height: 330px;
        object-fit: cover; /* 確保圖片在容器內完整顯示 */
        overflow: hidden;
    }


    .card1:hover img {
        transform: scale(1.1);
    }



    .card {
        flex-direction: column;
        border-radius: 20px;
        height: 100%;
        display: flex;
    }

    /* personal_member */
    body {
        background-color: #fff;
    }

    .container .navbar-expand-lg {
        border: 1px solid #ececec;
    }

    button {
        background-color: #F24B88;
        color: #ffffff;
    }

    active .cc {
        border-bottom: 3px solid #F24B88;
    }

    .member.line a:hover,
    .member.line a:active {
        border-bottom: 2px solid #F24B88;
    }

    .member.ac ol li a {
        border-bottom: 2px solid #F24B88;
    }

    /* 分隔符 */

    $breadcrumb-divider: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='currentColor'/%3E%3C/svg%3E");

    figure {
        width: 35%;
        padding: 5px;
        float: right;
        margin-right: 20px;
    }


    /* 圓形框框樣式 */
    .round-image {
        border-radius: 50%;
        /* 50% 會將元素變成圓形 */
        overflow: hidden;
        /* 超出元素範圍的部分隱藏 */
        width: 500px;
        /* 調整圖片寬度 */
        height: 500px;
        /* 調整圖片高度 */
        margin: 0 auto;
        /* 水平居中 */
    }

        /* 圖片樣式 */
        .round-image img {
            width: 100%;
            /* 讓圖片自適應容器大小 */
            height: auto;
        }

    li label {
        margin: 25px;
    }

    .personalBtn {
        border-radius: 25px;
        margin-left: 50px;
    }

    .serviceBtn button {
        background-color: #F24B88;
        /* border-radius: 25px; */
    }

    /* personal 表單元素 table */

    ul li {
        list-style-type: none;
    }

    .tb1 {
        width: 400px;
        border: 3px solid #0072E3;
        border-collapse: collapse;
    }

    td,
    th {
        border-bottom: 1px solid gray;
        text-align: center;
    }

    /* table {
                                margin: 50px;
                                padding: 50px;
                            } */

    thead {
        background-color: #2b2b2b;
        color: #ffffff;
        text-transform: capitalize;
        margin: 60px;
        padding: 60px;
        text-align: center;
    }

    tbody {
        text-align: center;
    }

    .cc.vv td:hover {
        background-color: rgba(145, 145, 145, 0.603);
        color: rgb(26, 26, 26);
    }

    .favotitelist.img1 {
        width: 100px;
    }

    /* personal 收藏清單 */



    .favoriteTag {
        border: 1px solid #acd6ff;
        border-radius: 10px;
    }

    .h-150px {
        height: 150px;
    }

    .mh-250px {
        min-height: 250px;
    }

    .h-300px {
        height: 300px;
    }

    .w-600px {
        /* width: 600px; */
    }

    .fz-40px {
        font-size: 40px;
    }

    .fz-12px {
        font-size: 12px;
    }

    .op5 {
        opacity: 0.5;
    }

    .cup {
        cursor: pointer;
    }

    .card1 img {
        transition: all 0.2s;
    }

    /* 圓形框框樣式 */
    .card-image {
        overflow: hidden;
        /* 超出元素範圍的部分隱藏 */
        width: 220px;
        /* 調整圖片寬度 */
        height: 220px;
        /* 調整圖片高度 */
        margin: 0 auto;
        /* 水平居中 */
    }

        /* 圖片樣式 */
        .card-image img {
            width: 100%;
            /* 讓圖片自適應容器大小 */
            height: auto;
        }




    .card1:hover img {
        transform: scale(1.1);
    }

    /* .card {
                                width: 250px;
                            } */

    /* personal 超連結 */
    a:hover,
    a:visited,
    a:link,
    a:active {
        text-decoration: none;
    }

    /* personal_course */

    .text-center {
        text-align: center;
    }

    .coursebody {
        background-color: #000;
    }

    .course-single-body {
        background-color: #000;
    }


    .list-group-item {
        background: linear-gradient(90deg, #f24b88 0%, #bd00ff 100%);
    }


    /* personal_member */
    figure {
        width: 35%;
        padding: 5px;
        float: right;
        margin-right: 20px;
    }

    .member.img-head {
        width: 300px;
    }

    li label {
        margin: 25px;
    }

    .personalBtn1 {
        border-radius: 25px;
    }

    /* personal 表單元素 table */

    .tb1 {
        width: 400px;
        border: 3px solid #0072E3;
        border-collapse: collapse;
    }

    td,
    th {
        border-bottom: 1px solid gray;
        text-align: center;
    }

    /* table {
                                margin: 50px;
                                padding: 50px;
                            } */

    thead {
        color: #ffffff;
        text-transform: capitalize;
        margin: 60px;
        padding: 60px;
        text-align: center;
    }

    tbody {
        margin-right: auto;
        justify-content: center;
        align-items: center;
        text-align: center;
    }

    /* tbody tr:hover {
                                background-color: aqua;
                                color: rgb(241, 241, 241);
                            } */

    .tableclass tbody td:hover {
        background-color: rgba(145, 145, 145, 0.603);
        color: rgb(26, 26, 26);
    }

    .favotitelist.img1 {
        width: 100px;
    }

    td img {
        width: 150px;
    }

    .class.tr td {
        justify-content: center;
        align-items: center;
        text-align: center;
        vertical-align: middle;
        color: #000000;
    }

    /* personal 課程紀錄
                            .tableRecord.tt tbody tr:nth-child(2n) {
                                background-color: #FDEDF3
                            } */

    /* .plot.ho ul li a:hover,
                            a:active {
                                background: #F24B88;
                            } */

    .st1 {
        width: 450px;
        /* border-bottom: 3px dashed #9D9D9D; */
        margin: 20px;
        padding-bottom: 10px;
    }

    /* Personal Coach */

    textarea {
        resize: none;
    }

    .t1 {
        width: 100px;
        /* border: 1px solid red; */
        float: left;
        text-align: right;
    }

    /* td ul li {
                                float: left
                            } */

</style>